# Generated by Django 5.1.4 on 2025-02-14 09:05

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('brokers', '0001_initial'),
        ('elevators', '0005_elevatorissuelog'),
        ('maintenance_companies', '0004_alter_maintenancecompanyprofile_user'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('min_charge_per_elevator', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('default_commission', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('default_commission_duration', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('default_calculation_date', models.PositiveIntegerField(default=20, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('default_due_date', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
            ],
        ),
        migrations.CreateModel(
            name='BrokerBalance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('expected_monthly_earnings', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('withdrawable_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('broker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='balances', to='brokers.brokeruser')),
            ],
        ),
        migrations.CreateModel(
            name='ExpectedPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('calculation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('due_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('overdue', 'Overdue')], default='pending', max_length=20)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('assets', models.ManyToManyField(related_name='expected_payments', to='elevators.elevator')),
                ('maintenance_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expected_payments', to='maintenance_companies.maintenancecompanyprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('transaction_id', models.CharField(max_length=100, unique=True)),
                ('payment_method', models.CharField(choices=[('mpesa', 'M-PESA'), ('bank', 'Bank Transfer'), ('other', 'Other')], default='mpesa', max_length=50)),
                ('is_successful', models.BooleanField(default=True)),
                ('expected_payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='payments.expectedpayment')),
                ('maintenance_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='maintenance_companies.maintenancecompanyprofile')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount_per_asset', models.DecimalField(decimal_places=2, default=700.0, help_text='Amount charged per elevator per month.', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('maintenance_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_plans', to='maintenance_companies.maintenancecompanyprofile')),
            ],
        ),
        migrations.CreateModel(
            name='RevenueSplit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_revenue', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('broker_commission', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('company_earnings', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('split_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revenue_splits', to='payments.payment')),
            ],
        ),
        migrations.CreateModel(
            name='WithdrawalRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('request_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('broker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawal_requests', to='brokers.brokeruser')),
            ],
        ),
    ]
