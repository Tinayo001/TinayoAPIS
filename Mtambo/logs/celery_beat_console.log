
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1


def chunks(task, it, n):
    return 1


def test_celery(self):
    return 1


def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1


def check_overdue_schedules():
    return 1


def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1


def xmap(task, it):
    return 1


def backend_cleanup():
    return 1


def debug_task(self):
    return 1


def chain(*args, **kwargs):
    return 1


def xstarmap(task, it):
    return 1


def accumulate(self, *args, **kwargs):
    return 1

celery beat v5.4.0 (opalescent) is starting.
__    -    ... __   -        _
LocalTime -> 2025-02-08 07:34:55
Configuration ->
    . broker -> redis://localhost:6379/0
    . loader -> celery.loaders.app.AppLoader
    . scheduler -> django_celery_beat.schedulers.DatabaseScheduler

    . logfile -> logs/celery_beat.log@%INFO
    . maxinterval -> 5.00 seconds (5s)

def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1


def chunks(task, it, n):
    return 1


def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1


def check_overdue_schedules(self):
    return 1


def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1


def test_celery(self):
    return 1


def xmap(task, it):
    return 1


def backend_cleanup():
    return 1


def debug_task(self):
    return 1


def chain(*args, **kwargs):
    return 1


def xstarmap(task, it):
    return 1


def accumulate(self, *args, **kwargs):
    return 1


def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1


def chunks(task, it, n):
    return 1


def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1


def check_overdue_schedules():
    return 1


def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1


def xmap(task, it):
    return 1


def backend_cleanup():
    return 1


def debug_task(self):
    return 1


def chain(*args, **kwargs):
    return 1


def xstarmap(task, it):
    return 1


def accumulate(self, *args, **kwargs):
    return 1

Stale pidfile exists - Removing it.
celery beat v5.4.0 (opalescent) is starting.
__    -    ... __   -        _
LocalTime -> 2025-02-09 06:40:59
Configuration ->
    . broker -> redis://localhost:6379/0
    . loader -> celery.loaders.app.AppLoader
    . scheduler -> django_celery_beat.schedulers.DatabaseScheduler

    . logfile -> logs/celery_beat.log@%INFO
    . maxinterval -> 5.00 seconds (5s)

def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1


def chunks(task, it, n):
    return 1


def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1


def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1


def check_overdue_schedules():
    return 1


def xmap(task, it):
    return 1


def backend_cleanup():
    return 1


def debug_task(self):
    return 1


def chain(*args, **kwargs):
    return 1


def xstarmap(task, it):
    return 1


def accumulate(self, *args, **kwargs):
    return 1


def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1


def chunks(task, it, n):
    return 1


def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1


def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1


def check_overdue_schedules():
    return 1


def xmap(task, it):
    return 1


def backend_cleanup():
    return 1


def debug_task(self):
    return 1


def chain(*args, **kwargs):
    return 1


def xstarmap(task, it):
    return 1


def accumulate(self, *args, **kwargs):
    return 1

celery beat v5.4.0 (opalescent) is starting.
__    -    ... __   -        _
LocalTime -> 2025-02-09 10:17:23
Configuration ->
    . broker -> redis://localhost:6379/0
    . loader -> celery.loaders.app.AppLoader
    . scheduler -> django_celery_beat.schedulers.DatabaseScheduler

    . logfile -> logs/celery_beat.log@%INFO
    . maxinterval -> 5.00 seconds (5s)

def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1


def chunks(task, it, n):
    return 1


def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1


def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1


def check_overdue_schedules():
    return 1


def xmap(task, it):
    return 1


def backend_cleanup():
    return 1


def debug_task(self):
    return 1


def chain(*args, **kwargs):
    return 1


def xstarmap(task, it):
    return 1


def accumulate(self, *args, **kwargs):
    return 1

celery beat v5.4.0 (opalescent) is starting.
__    -    ... __   -        _
LocalTime -> 2025-02-09 10:17:58
Configuration ->
    . broker -> redis://localhost:6379/0
    . loader -> celery.loaders.app.AppLoader
    . scheduler -> django_celery_beat.schedulers.DatabaseScheduler

    . logfile -> logs/celery_beat.log@%INFO
    . maxinterval -> 5.00 seconds (5s)

def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1


def chunks(task, it, n):
    return 1


def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1


def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1


def check_overdue_schedules():
    return 1


def xmap(task, it):
    return 1


def backend_cleanup():
    return 1


def debug_task(self):
    return 1


def chain(*args, **kwargs):
    return 1


def xstarmap(task, it):
    return 1


def accumulate(self, *args, **kwargs):
    return 1


def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1


def chunks(task, it, n):
    return 1


def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1


def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1


def check_overdue_schedules():
    return 1


def xmap(task, it):
    return 1


def backend_cleanup():
    return 1


def debug_task(self):
    return 1


def chain(*args, **kwargs):
    return 1


def xstarmap(task, it):
    return 1


def accumulate(self, *args, **kwargs):
    return 1


def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1


def chunks(task, it, n):
    return 1


def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1


def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1


def check_overdue_schedules():
    return 1


def xmap(task, it):
    return 1


def backend_cleanup():
    return 1


def debug_task(self):
    return 1


def chain(*args, **kwargs):
    return 1


def xstarmap(task, it):
    return 1


def accumulate(self, *args, **kwargs):
    return 1

ERROR: Pidfile (logs/celery_beat.pid) already exists.
Seems we're already running? (pid: 23399)
celery beat v5.4.0 (opalescent) is starting.
